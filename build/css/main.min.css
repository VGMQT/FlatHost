.article__img img,.copyright__logo img,.logo img{display:block;max-width:100%;max-height:100%}

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{font-size:16px}body{line-height:1.42;-webkit-font-smoothing:antialiased}body,html{width:100%;height:100%}.wrapper{position:relative;min-width:960px;min-height:100%;overflow:hidden}.wrapper:after{display:block;height:300px;overflow:hidden;content:""}.container{width:940px;margin:0 auto}*{box-sizing:border-box}h1,h2,h3,h4,h5,h6{margin-top:0;font-weight:400}p{margin:0}a{text-decoration:none;outline:none}ul{padding:0;margin:0}li{list-style:none}input[type=number]{-moz-appearance:textfield}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}footer{position:relative;min-width:960px;width:100%;height:300px;margin-top:-300px}.btn{display:block;padding:.625rem 1.25rem;border-radius:3px;text-transform:uppercase;color:#fff;background:#2cc76a;transition:all .3s}.btn:hover{transform:scale(.98)}.btn:active{transform:scale(.95)}.title{margin-bottom:1.5625rem;font-size:1.375rem;color:#22292e}.subtitle{font-size:1rem;color:#767676}.desc{color:#656565}.desc p{margin-bottom:1.875rem}.desc p:last-child{margin-bottom:0}.header{padding:2.1875rem 0;background:#363f48}.header .container{display:flex;justify-content:space-between;align-items:center}.header a,.logo{display:block}.logo{width:10.9375rem;transition:all .3s}.logo:hover{transform:rotate(10deg)}.menu{justify-content:center;text-transform:uppercase}.menu,.nav{display:flex;align-items:center}.nav{margin-right:3.125rem}.nav__link{margin-right:1.875rem;font-size:.875rem;color:#fff;transition:all .3s}.nav__link:last-child{margin-right:0}.nav__link:hover{color:#2cc76a}.login{display:flex;align-items:center}.login__log{margin-right:1.875rem;color:#9ba4ae;transition:all .3s}.login__log:hover{color:#2cc76a}.footer{font-size:.875rem;background:#262e34}.footer .container{display:flex;flex-direction:column;justify-content:space-around;height:100%}.contacts{display:flex;justify-content:space-between}.contacts__list{display:flex;flex-direction:column}.contacts__list span{margin-bottom:.625rem;text-transform:uppercase;color:#68737b}.contacts__link{color:#fff;transition:all .3s}.contacts__link:hover{color:#2cc76a}.copyright{display:flex;justify-content:space-between;align-items:center}.copyright__text{color:#fff}.copyright__logo{display:block;width:5.625rem;transition:all .3s}.copyright__logo:hover{transform:rotate(10deg)}.content{padding:3.125rem 0}.content .container{display:flex}.title-wrapper{margin-bottom:1.5625rem}.title-wrapper .title{margin-bottom:.3125rem;font-size:1.875rem}.author,.comments-value{color:#2cc76a}.article{width:70%}.article__img{width:100%;margin-bottom:1.25rem}.sidebar{width:30%;padding:0 1.25rem}.sidebar a{display:block;color:#767676;transition:all .3s}.sidebar ul{margin-bottom:2.1875rem}.sidebar ul:last-child{margin-bottom:0}.categories__item{z-index:1;position:relative;margin-bottom:.625rem}.categories__item:last-child{margin-bottom:0}.categories__item:after{z-index:0;position:absolute;bottom:0;left:0;display:block;width:100%;height:0;background:#2cc76a;content:"";transition:all .3s}.categories__item:hover:after{height:100%}.categories__item:hover a{color:#fff}.categories__link{position:relative;z-index:2}.widget{margin-bottom:1.25rem;color:#767676}.widget:last-child{margin-bottom:0}.archieves__item{position:relative;margin-bottom:.625rem}.archieves__item:last-child{margin-bottom:0}.archieves__item:after{z-index:0;position:absolute;bottom:0;left:0;display:block;width:100%;height:0;background:#2cc76a;content:"";transition:all .3s}.archieves__item:hover:after{height:100%}.archieves__item:hover a{color:#fff}.archieves__link{position:relative;z-index:2}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
